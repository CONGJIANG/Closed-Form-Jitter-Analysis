%% Step 1: Generate two random spike trains.
firing1=100 %20; % neuron 1 firing in Hz
firing2=100 %20;
end_time=1; % end time 1 second
small_delta=.03; % for synchrony (in seconds)
synch_range=[0 1];

total_jitters=500;
total_trials=50000;
big_delta=.02; % for delta-coursening in interval jitter
u=rand(total_trials,1);

rate1=1/firing1;
X=[ exprnd(rate1) ];
while X(end)<end_time, X(end+1)=X(end)+exprnd(rate1); end
X=X(1:end-1);
    
rate2=1/firing2;
Y=[ exprnd(rate2) ];
while Y(end)<end_time, Y(end+1)=Y(end)+exprnd(rate2); end
Y=Y(1:end-1);

%X = 1
%Y = 2
%% Step 2: Make the spikes times discrete binary vectors.

% make containers with one millisecond bins.
milliBins = 1e3; % how do you want to discretize time?
Xd = zeros(1,milliBins);
Yd = zeros(1,milliBins);
ind1 = round(X*milliBins); ind1(ind1==0) =[];
ind2 = round(Y*milliBins); ind2(ind2==0) =[];
Xd(ind1) = 1;
Yd(ind2) = 1;

% delta is the length of the window
% j indexes the window number.

delta = 10;
J = milliBins./delta

XdMat = reshape(Xd,[J,delta]);
YdMat = reshape(Yd,[J,delta]);

for j = 1:size(XdMat,1)
    coincid(j) = numel(intersect(find(XdMat(j,:)==1),find(YdMat(j,:)==1)))
end

%
NY = sum(YdMat,2);
NX = sum(XdMat,2);
P = zeros(J,delta)
 %%
 clc; clear P 
    for j = 1:J
        term1 = znck( delta - NY(j),NX(j)-coincid(j));
        term2 = znck(NY(j),coincid(j));
        term3 = znck(delta,NX(j));
        P(j) = (term1*term2)/term3; 
    end
    P
    %%
    [C,tau] = xcorr(Xd,Yd)
    C(tau==0) - sum(coincid.*P)
    
    %%
    figure('color','w')
    subplot(3,1,1); imagesc(Xd); colormap(flipud(bone)); colorbar
    
    subplot(3,1,2); imagesc(Yd); colormap(flipud(bone)); colorbar

    subplot(3,1,3)
    imagesc(P); colormap hot
    colorbar
    xlabel('coincidences')
    ylabel('jth bin')
